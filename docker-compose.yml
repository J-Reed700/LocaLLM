version: '3.8'

services:
  locallm_server:
    build: .
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./src:/src
      - ./templates:/app/templates
      - ./static:/app/static
      - ./logs:/app/logs
      - ./.env:/.env
    environment:
      - DEBUG=True
      - MODEL_TYPE=text
      - MODEL_NAME=${MODEL_NAME:-falcon-40b-instruct}
      - OTEL_SERVICE_NAME=locaLLM_server
      - OTEL_METRICS_EXPORTER=prometheus
      - OTEL_EXPORTER_PROMETHEUS_ENABLED=true
      - OTEL_EXPORTER_PROMETHEUS_PORT=8001
      - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true
      - PYTHONPATH=/app
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=locallm
      - POSTGRES_USER=locallm
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-localdev}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=locallm
      - POSTGRES_USER=locallm
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-localdev}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U locallm"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: